{"version":3,"sources":["components/select/Select.js","sources/pageSizes.js","components/page-size/PageSize.js","components/title/Title.js","components/header/Header.js","components/row/Row.js","components/pagination-item/PaginationItem.js","components/pagination/Pagination.js","components/pagination-form/PaginationForm.js","sources/countries.js","sources/categories.js","components/select-form/SelectForm.js","components/search-form/SearchForm.js","components/form/Form.js","components/preloader/Preloader.js","components/read-button/ReadButton.js","components/img/Img.js","functions/formatDate.js","components/date/DateComp.js","components/author/Author.js","components/news-item/NewsItem.js","components/news-list/NewsList.js","components/footer/Footer.js","components/error-boundary/ErrorBoundary.js","functions/calculateLastPage.js","App.js","serviceWorker.js","index.js"],"names":["Select","_ref","arr","handleSelectChange","name","selected","className","classes","classNames","react_default","a","createElement","onChange","value","map","_ref2","label","key","defaultProps","PropTypes","array","string","func","style","pageSizes","PageSize","selectedPageSize","components_select_Select","Title","header","href","memo","Header","title","components_title_Title","components_page_size_PageSize","Row","children","PaginationItem","pageNumber","page","handlePageChange","itemSelected","onClick","Pagination","lastPage","items","Array","from","keys","components_pagination_item_PaginationItem","PaginationForm","totalResults","row_Row","disabled","components_pagination_Pagination","countries","categories","SelectForm","selectedCountry","selectedCategory","SearchForm","handleInputChange","handleSearchBtnClick","placeholder","handleBtnClick","Form","components_select_form_SelectForm","components_search_form_SearchForm","Preloader","src","alt","ReadButton","url","target","Img","urlToImage","width","formatDate","date","dateObj","Date","year","getFullYear","month","getMonth","day","getDate","concat","DateComp","Author","author","source","content","length","slice","NewsItem","_ref$article","article","description","publishedAt","components_img_Img","components_read_button_ReadButton","components_date_DateComp","components_author_Author","NewsList","news","components_news_item_NewsItem","Footer","ErrorBoundary","state","hasError","this","props","Fragment","Component","calculateLastPage","pageSize","Math","ceil","BASE_PATH","ALL_NEWS","TOP_NEWS","KEY","App","_this","country","category","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","_calculateURL","URL","_this$state","searchQuery","_this$state2","searchParams","set","fetchData","setState","isLoaded","asyncToGenerator","regenerator_default","mark","_callee","res","resJson","wrap","_context","prev","next","fetch","headers","Authorization","sent","ok","alert","status","json","articles","message","t0","stop","_ref3","_this$setState","_saveUserOptions","defineProperty","e","preventDefault","isNaN","updatePage","number","onTouchStart","touchStart","changedTouches","clientX","onTouchEnd","dif","_this$state3","SENSITIVITY","localStorage","options","_this$_loadUserOption","_loadUserOptions","JSON","parse","getItem","savedOptions","setItem","stringify","changingContent","_this$state4","components_news_list_NewsList","components_pagination_form_PaginationForm","components_footer_Footer","components_preloader_Preloader","components_error_boundary_ErrorBoundary","header_Header","components_form_Form","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.3cdec530.chunk.js","sourcesContent":["import React from 'react';\r\nimport classNames from 'classnames';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport './Select.css';\r\n\r\n\r\nconst Select = ({arr, handleSelectChange, name, selected, className}) => {\r\n    const classes = classNames(\r\n        className,\r\n        'select'\r\n    );\r\n\r\n    return (\r\n        <select className={classes}\r\n                onChange={handleSelectChange}\r\n                name={name}\r\n                value={selected}>\r\n            {arr.map(({value, label}) => (\r\n                <option key={value + label} value={value}>\r\n                    {label}\r\n                </option>\r\n            ))}\r\n        </select>\r\n    )\r\n};\r\n\r\n\r\nSelect.propTypes = {\r\n    arr: PropTypes.array,\r\n    name: PropTypes.string,\r\n    handleSelectChange: PropTypes.func,\r\n    selected: PropTypes.oneOfType([\r\n        PropTypes.string,\r\n        PropTypes.number\r\n    ]),\r\n    style: PropTypes.object,\r\n};\r\n\r\n\r\nSelect.defaultProps = {\r\n    arr: PropTypes.array,\r\n    name: PropTypes.string,\r\n    handleSelectChange: PropTypes.func,\r\n    selected: PropTypes.string,\r\n    style: {}\r\n};\r\n\r\nexport default Select;","const pageSizes = [\r\n    {\r\n        label: 10,\r\n        value: 10\r\n    },\r\n    {\r\n        label: 20,\r\n        value: 20\r\n    },\r\n    {\r\n        label: 50,\r\n        value: 50\r\n    }\r\n];\r\n\r\nexport default pageSizes;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport classNames from 'classnames';\r\n\r\nimport './PageSize.css';\r\n\r\nimport Select from \"../select/Select\";\r\n\r\nimport pageSizes from '../../sources/pageSizes';\r\n\r\n\r\nconst PageSize = ({selectedPageSize, handleSelectChange, className}) => {\r\n    const classes = classNames(\r\n        'pageSizesSelectWrapper',\r\n        className\r\n    );\r\n\r\n    return(\r\n        <div className={classes}>\r\n            <div>News per page:</div>\r\n            <Select name='pageSize'\r\n                    className=\"pageSizes\"\r\n                    arr={pageSizes}\r\n                    selected={selectedPageSize}\r\n                    handleSelectChange={handleSelectChange}/>\r\n        </div>\r\n    );\r\n};\r\n\r\n\r\nPageSize.propTypes = {\r\n    selectedPageSize: PropTypes.number,\r\n    handleSelectChange: PropTypes.func,\r\n    className: PropTypes.string,\r\n};\r\n\r\nPageSize.defaultProps = {\r\n    selectedPageSize: 10,\r\n    handleSelectChange: () => {},\r\n    className: ''\r\n};\r\n\r\nexport default PageSize;","import React, {memo} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport classNames from 'classnames';\r\n\r\nimport './Title.css';\r\n\r\n\r\nconst Title = ({header, className}) => {\r\n    const classes = classNames(\r\n        'appTitlesWrap',\r\n        className\r\n    );\r\n\r\n    return(\r\n        <div className={classes}>\r\n            <h1 className=\"appTitle\">{header}</h1>\r\n            <h2 className=\"appSubtitle\">Powered by <a href=\"https://newsapi.org\">News API</a></h2>\r\n        </div>\r\n    )\r\n};\r\n\r\n\r\nTitle.propTypes = {\r\n    header: PropTypes.string,\r\n    className: PropTypes.string\r\n};\r\n\r\nTitle.defaultProps = {\r\n    header: 'Simple header',\r\n    className: ''\r\n};\r\n\r\nexport default memo(Title);","import React, {memo} from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport PageSize from \"../page-size/PageSize\";\r\nimport Title from \"../title/Title\";\r\n\r\n\r\nconst Header = ({title, selectedPageSize, handleSelectChange}) => (\r\n    <header className=\"row\">\r\n        <Title header={title}\r\n               className=\"col-6 col-md-12\"/>\r\n\r\n        <PageSize className=\"col-6 col-md-12\"\r\n                  selectedPageSize={selectedPageSize}\r\n                  handleSelectChange={handleSelectChange}/>\r\n    </header>\r\n);\r\n\r\n\r\nHeader.propTypes = {\r\n    title: PropTypes.string,\r\n    selectedPageSize: PropTypes.number,\r\n    handleSelectChange: PropTypes.func,\r\n};\r\n\r\nHeader.defaultProps = {\r\n    title: 'Simple header',\r\n    selectedPageSize: 10,\r\n    handleSelectChange: () => {}\r\n};\r\n\r\nexport default memo(Header);","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport classNames from 'classnames';\r\n\r\n\r\nconst Row = ({children, className}) => {\r\n    const classes = classNames(\r\n        className,\r\n        'row'\r\n    );\r\n\r\n    return (\r\n        <div className={classes}>\r\n            {children}\r\n        </div>\r\n    )\r\n};\r\n\r\n\r\nRow.propTypes = {\r\n    children: PropTypes.node,\r\n    className: PropTypes.string\r\n};\r\n\r\nRow.defaultProps = {\r\n    children: '',\r\n    className: ''\r\n};\r\n\r\nexport default Row;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport classNames from 'classnames'\r\n\r\nimport './PaginationItem.css';\r\n\r\n\r\nconst PaginationItem = ({pageNumber, page, handlePageChange}) =>{\r\n    const classes = classNames(\r\n        'paginationItem',\r\n        {itemSelected: page === pageNumber}\r\n    );\r\n\r\n    return(\r\n        <button name={pageNumber}\r\n                className={classes}\r\n                onClick={handlePageChange}>\r\n            {pageNumber}\r\n        </button>\r\n    );\r\n};\r\n\r\n\r\nPaginationItem.propTypes = {\r\n    pageNumber: PropTypes.number,\r\n    page: PropTypes.number,\r\n    handlePageChange: PropTypes.func,\r\n};\r\n\r\nPaginationItem.defaultProps = {\r\n    pageNumber: 1,\r\n    page: 1,\r\n    handlePageChange: () => {},\r\n};\r\n\r\nexport default PaginationItem;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport classNames from 'classnames'\r\n\r\nimport './Pagination.css';\r\n\r\nimport PaginationItem from '../pagination-item/PaginationItem';\r\n\r\n\r\nconst Pagination = ({page, lastPage, handlePageChange, className}) => {\r\n    const classes = classNames(\r\n        className,\r\n        'pagination'\r\n    );\r\n\r\n    let items = Array.from(new Array(lastPage).keys());\r\n\r\n    return (\r\n        <div className={classes}>\r\n            {items.map((pageNumber) => (\r\n                <PaginationItem pageNumber={pageNumber + 1}\r\n                                page={page}\r\n                                handlePageChange={handlePageChange}\r\n                                key={pageNumber}/>\r\n            ))}\r\n        </div>\r\n    )\r\n};\r\n\r\n\r\nPagination.propTypes = {\r\n    page: PropTypes.number,\r\n    lastPage: PropTypes.number,\r\n    handlePageChange: PropTypes.func,\r\n    className: PropTypes.string\r\n};\r\n\r\nPagination.defaultProps = {\r\n    page: 1,\r\n    lastPage: 1,\r\n    handlePageChange: () => {},\r\n    className: ''\r\n};\r\n\r\nexport default Pagination;","import React, {memo} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport classNames from 'classnames';\r\n\r\nimport './PaginationForm.css';\r\n\r\nimport Row from \"../row/Row\";\r\nimport Pagination from \"../pagination/Pagination\";\r\n\r\n\r\nconst PaginationForm = ({handlePageChange, page, lastPage, totalResults, className}) => {\r\n    const classes = classNames(\r\n        'paginationForm',\r\n        'row',\r\n        className\r\n    );\r\n\r\n    return (\r\n        <Row>\r\n            <form className={classes}>\r\n                <button name=\"prev\"\r\n                        className=\"arrowBtn col-1\"\r\n                        onClick={handlePageChange}\r\n                        disabled={totalResults === 0 || page === 1}>\r\n                    {'<'}\r\n                </button>\r\n\r\n                <Pagination className=\"col-22 col-md-24\"\r\n                            handlePageChange={handlePageChange}\r\n                            page={page}\r\n                            lastPage={lastPage}/>\r\n\r\n                <button name=\"next\"\r\n                        className=\"arrowBtn col-1\"\r\n                        onClick={handlePageChange}\r\n                        disabled={totalResults === 0 || page === lastPage}>\r\n                    {'>'}\r\n                </button>\r\n            </form>\r\n        </Row>\r\n    );\r\n};\r\n\r\n\r\nPaginationForm.propTypes = {\r\n    className: PropTypes.string,\r\n    handlePageChange: PropTypes.func,\r\n    page: PropTypes.number,\r\n    lastPage: PropTypes.number,\r\n};\r\n\r\nPaginationForm.defaultProps = {\r\n    className: '',\r\n    handlePageChange: () => {},\r\n    page: 1,\r\n    lastPage: 1,\r\n};\r\n\r\nexport default memo(PaginationForm);","const countries = [\r\n    {\r\n       label: 'Australia',\r\n       value: 'au'\r\n    },\r\n    {\r\n        label: 'Belgia',\r\n        value: 'be'\r\n    },\r\n    {\r\n        label: 'Bolgaria',\r\n        value: 'bg'\r\n    },\r\n    {\r\n        label: 'Canada',\r\n        value: 'ca'\r\n    },\r\n    {\r\n        label: 'Egypt',\r\n        value: 'eg'\r\n    },\r\n    {\r\n        label: 'Great Britain',\r\n        value: 'gb'\r\n    },\r\n    {\r\n        label: 'Germany',\r\n        value: 'de'\r\n    },\r\n    {\r\n        label: 'Greece',\r\n        value: 'gr'\r\n    },\r\n    {\r\n        label: 'Italy',\r\n        value: 'it'\r\n    },\r\n    {\r\n        label: 'Russia',\r\n        value: 'ru'\r\n    },\r\n    {\r\n        label: 'Turkey',\r\n        value: 'tr'\r\n    },\r\n    {\r\n        label: 'USA',\r\n        value: 'us'\r\n    },\r\n];\r\n\r\nexport default countries;\r\n","const categories = [\r\n    {\r\n        label: 'business',\r\n        value: 'business'\r\n    },\r\n    {\r\n        label: 'entertainment',\r\n        value: 'entertainment'\r\n    },\r\n    {\r\n        label: 'general',\r\n        value: 'general'\r\n    },\r\n    {\r\n        label: 'health',\r\n        value: 'health'\r\n    },\r\n    {\r\n        label: 'science',\r\n        value: 'science'\r\n    },\r\n    {\r\n        label: 'sports',\r\n        value: 'sports'\r\n    },\r\n    {\r\n        label: 'technology',\r\n        value: 'technology'\r\n    }\r\n];\r\n\r\n\r\nexport default categories;\r\n","import React, {memo} from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport './SelectForm.css';\r\n\r\nimport Select from \"../select/Select\";\r\n\r\nimport countries from '../../sources/countries';\r\nimport categories from '../../sources/categories';\r\n\r\n\r\nconst SelectForm = ({selectedCountry, selectedCategory, handleSelectChange}) => (\r\n    <fieldset className='selectForm col-12 col-lg-4 col-xl-3'>\r\n        <legend className=\"legend\">Search in HOT news:</legend>\r\n        <Select name='country'\r\n                arr={countries}\r\n                selected={selectedCountry}\r\n                handleSelectChange={handleSelectChange}/>\r\n\r\n        <Select name='category'\r\n                arr={categories}\r\n                selected={selectedCategory}\r\n                handleSelectChange={handleSelectChange}/>\r\n    </fieldset>\r\n);\r\n\r\n\r\nSelectForm.propTypes = {\r\n    selectedCountry: PropTypes.string,\r\n    selectedCategory: PropTypes.string,\r\n    handleSelectChange: PropTypes.func,\r\n};\r\n\r\nSelectForm.defaultProps = {\r\n    selectedCountry: 'USA',\r\n    selectedCategory: 'general',\r\n    handleSelectChange: () => {},\r\n};\r\n\r\nexport default memo(SelectForm);","import React, {memo} from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport './SearchForm.css';\r\n\r\n\r\nconst SearchForm = ({value, handleInputChange, handleSearchBtnClick}) => (\r\n        <fieldset className='col-12 col-lg-8 col-xl-9'>\r\n            <legend className=\"legend\">Search in ALL news:</legend>\r\n            <div className=\"searchForm\">\r\n                <input className=\"searchInput\"\r\n                       placeholder=\"Search...\"\r\n                       value={value}\r\n                       onChange={handleInputChange}/>\r\n                <button className=\"searchButton\"\r\n                        onClick={handleSearchBtnClick}>OK\r\n                </button>\r\n            </div>\r\n        </fieldset>\r\n);\r\n\r\n\r\nSearchForm.propTypes = {\r\n    value: PropTypes.string,\r\n    handleInputChange: PropTypes.func,\r\n    handleBtnClick: PropTypes.func,\r\n};\r\n\r\nSearchForm.defaultProps = {\r\n    value: '',\r\n    handleInputChange:()=>{},\r\n    handleBtnClick: ()=>{},\r\n};\r\n\r\nexport default memo(SearchForm);","import React, {memo} from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport './Form.css';\r\n\r\nimport SelectForm from \"../select-form/SelectForm\";\r\nimport SearchForm from \"../search-form/SearchForm\";\r\n\r\n\r\nconst Form = ({selectedCountry, selectedCategory, handleSelectChange,\r\n                  value, handleInputChange, handleSearchBtnClick}) => (\r\n    <form className=\"row\">\r\n        <SelectForm selectedCountry={selectedCountry}\r\n                    selectedCategory={selectedCategory}\r\n                    handleSelectChange={handleSelectChange}/>\r\n\r\n        <SearchForm value={value}\r\n                    handleInputChange={handleInputChange}\r\n                    handleSearchBtnClick={handleSearchBtnClick}/>\r\n    </form>\r\n);\r\n\r\n\r\nForm.propTypes = {\r\n    selectedCountry: PropTypes.string,\r\n    selectedCategory: PropTypes.string,\r\n    handleSelectChange: PropTypes.func,\r\n\r\n    value: PropTypes.string,\r\n    handleInputChange: PropTypes.func,\r\n    handleBtnClick: PropTypes.func,\r\n};\r\n\r\nForm.defaultProps = {\r\n    selectedCountry: 'USA',\r\n    selectedCategory: 'general',\r\n    handleSelectChange: () => {},\r\n\r\n    value: '',\r\n    handleInputChange:()=>{},\r\n    handleBtnClick: ()=>{},\r\n};\r\n\r\nexport default memo(Form);","import React from 'react';\r\n\r\nimport './Preloader.css';\r\n\r\nconst Preloader = () => (\r\n    <div className='preloader'>\r\n        <img src=\"./placeholder.svg\"\r\n             alt='loading...'/>\r\n    </div>\r\n);\r\n\r\nexport default Preloader;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport './ReadButton.css';\r\n\r\n\r\nconst ReadButton = ({children, url}) => (\r\n    <a className=\"readButton\"\r\n       href={url}\r\n       target=\"_blanc\">{children}\r\n    </a>\r\n\r\n);\r\n\r\n\r\nReadButton.propTypes = {\r\n    children: PropTypes.string,\r\n    url: PropTypes.string\r\n};\r\n\r\nReadButton.defaultProps = {\r\n    children: 'Read',\r\n    url: ''\r\n};\r\n\r\nexport default ReadButton;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport classNames from 'classnames';\r\n\r\nimport './Img.css';\r\n\r\n\r\nconst Img = ({urlToImage, className}) => {\r\n    const classes = classNames(\r\n        className,\r\n        'imgWrapper'\r\n    );\r\n\r\n    return (\r\n        <div className={classes}>\r\n            <img src={urlToImage ? urlToImage : './News.png'}\r\n                 width='100%'\r\n                 alt=\"\"/>\r\n        </div>\r\n    )\r\n};\r\n\r\n\r\nImg.propTypes = {\r\n    urlToImage: PropTypes.string,\r\n    className: PropTypes.string\r\n};\r\n\r\nImg.defaultProps = {\r\n    urlToImage: '',\r\n    className: ''\r\n};\r\n\r\nexport default Img;","const formatDate = (date) => {\r\n    const dateObj = new Date(date);\r\n    let year = dateObj.getFullYear();\r\n    let month = dateObj.getMonth() + 1;\r\n    let day = dateObj.getDate();\r\n\r\n    if (month < 10) month = '0' + month;\r\n    if (day < 10) day = '0' + day;\r\n\r\n    return `${day}.${month}.${year}`;\r\n};\r\n\r\nexport default formatDate;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport './DateComp.css';\r\n\r\nimport  formatDate from '../../functions/formatDate';\r\n\r\n\r\nconst DateComp = ({date}) => {\r\n    return(\r\n        <span className=\"date\">\r\n            {formatDate(date)}\r\n        </span>\r\n    )\r\n};\r\n\r\n\r\nDateComp.propTypes = {\r\n    date: PropTypes.string,\r\n};\r\n\r\nDateComp.defaultProps = {\r\n   date: ''\r\n};\r\n\r\nexport default DateComp;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport './Author.css';\r\n\r\n\r\nconst Author = ({author, source}) => {\r\n    let content = author;\r\n    if (!content) content = source;\r\n\r\n    if (content.length > 20) {\r\n        content = content.slice(0, 20) + '...';\r\n    }\r\n    return (\r\n        <span className=\"author\">\r\n            {content}\r\n        </span>\r\n    );\r\n};\r\n\r\n\r\nAuthor.propTypes = {\r\n    author: PropTypes.string,\r\n    source: PropTypes.string,\r\n};\r\n\r\nAuthor.defaultProps = {\r\n    author: '',\r\n    source: '',\r\n};\r\n\r\nexport default Author;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport classNames from 'classnames';\r\n\r\nimport './NewsItem.css';\r\n\r\nimport ReadButton from \"../read-button/ReadButton\";\r\nimport Img from \"../img/Img\";\r\nimport DateComp from \"../date/DateComp\";\r\nimport Author from \"../author/Author\";\r\nimport Row from \"../row/Row\";\r\n\r\n\r\nconst NewsItem = ({article: {title, description, url, urlToImage, publishedAt, author, source}, className}) => {\r\n    const classes = classNames(\r\n        className,\r\n        'article',\r\n    );\r\n\r\n    return(\r\n        <article className={classes}>\r\n            <Row>\r\n                <header className=\"articleTitle col-12\">\r\n                    {title}\r\n                </header>\r\n            </Row>\r\n\r\n            <Row className=\"articleContent\">\r\n                <Img className=\"col-12 col-md-4 col-lg-3\"\r\n                     urlToImage={urlToImage}/>\r\n                <div className=\"contentWrapper col-12 col-md-8 col-lg-9\">\r\n                    <div className=\"description\">{description}</div>\r\n                    <div className=\"lowerContent\">\r\n                        <ReadButton url={url}>\r\n                            read article\r\n                        </ReadButton>\r\n                        <div className=\"info\">\r\n                            <DateComp date={publishedAt}/>\r\n                            <span>|</span>\r\n                            <Author author={author}\r\n                                    source={source.name}/>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </Row>\r\n        </article>\r\n    )\r\n};\r\n\r\n\r\nNewsItem.propTypes = {\r\n    title: PropTypes.string,\r\n    description: PropTypes.string,\r\n    url: PropTypes.string,\r\n    urlToImage: PropTypes.string,\r\n    publishedAt: PropTypes.string,\r\n    author: PropTypes.string,\r\n    source: PropTypes.string,\r\n    className: PropTypes.string\r\n};\r\n\r\nNewsItem.defaultProps = {\r\n    title: '',\r\n    description: '',\r\n    url: '',\r\n    urlToImage: '',\r\n    publishedAt: '',\r\n    author: '',\r\n    source: '',\r\n    className: ''\r\n};\r\n\r\nexport default NewsItem;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport NewsItem from '../news-item/NewsItem';\r\n\r\nimport './NewsList.css';\r\n\r\nconst NewsList = ({news, className}) => {\r\n    let content;\r\n    if (news.length) {\r\n        content =\r\n            <main className='row'>\r\n                {news.map(article => (\r\n                    <NewsItem article={article}\r\n                              className={className}\r\n                              key={article.title}/>\r\n                ))}\r\n            </main>\r\n    } else {\r\n        content = <div className=\"notFound\">Nothing found</div>\r\n    }\r\n    return content;\r\n};\r\n\r\n\r\nNewsList.propTypes = {\r\n    news: PropTypes.array,\r\n    className: PropTypes.string\r\n};\r\n\r\nNewsList.defaultProps = {\r\n    news: [],\r\n    className: ''\r\n};\r\n\r\nexport default NewsList;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport classNames from 'classnames';\r\n\r\nimport './Footer.css';\r\n\r\n\r\nconst Footer = ({className}) => {\r\n    const classes = classNames(\r\n        'footer',\r\n        className\r\n    );\r\n    return(\r\n        <footer className=\"row\">\r\n            <i className={classes}>© nikita2090, 2019</i>\r\n        </footer>\r\n    )\r\n};\r\n\r\n\r\nFooter.propTypes = {\r\n    className: PropTypes.string\r\n};\r\n\r\nFooter.defaultProps = {\r\n    className: ''\r\n};\r\n\r\nexport default Footer;","import React, {Component} from 'react';\r\n\r\nimport './ErrorBoundary.css';\r\n\r\nimport Title from '../title/Title';\r\n\r\n\r\nclass ErrorBoundary extends Component{\r\n    state = {\r\n        hasError: false\r\n    };\r\n\r\n    static getDerivedStateFromError() {\r\n        return {hasError: true}\r\n    }\r\n\r\n    render() {\r\n        const {hasError} = this.state;\r\n        const {children} = this.props;\r\n\r\n        let content;\r\n        if (hasError) {\r\n            content =\r\n                <>\r\n                    <Title header=\"News\"/>\r\n                    <div className=\"errBoundary\">\r\n                        <h2>Something went wrong</h2>\r\n                        <p>Please refresh the page</p>\r\n                    </div>\r\n                </>\r\n        } else {\r\n            content = children;\r\n        }\r\n\r\n        return content;\r\n    }\r\n}\r\n\r\nexport default ErrorBoundary;","const calculateLastPage = (totalResults, pageSize) => {\r\n    if (totalResults > 100) totalResults = 100;\r\n    return Math.ceil(totalResults / pageSize);\r\n};\r\n\r\nexport default calculateLastPage;","import React, {Component} from 'react';\nimport './App.css';\n\nimport Header from './components/header/Header';\nimport PaginationForm from \"./components/pagination-form/PaginationForm\";\nimport Form from \"./components/form/Form\";\nimport Preloader from \"./components/preloader/Preloader\";\nimport NewsList from './components/news-list/NewsList';\nimport Footer from './components/footer/Footer';\nimport ErrorBoundary from './components/error-boundary/ErrorBoundary';\n\nimport calculateLastPage from './functions/calculateLastPage';\n\n\nconst BASE_PATH = 'https://newsapi.org/v2';\nconst ALL_NEWS = '/everything?';\nconst TOP_NEWS = '/top-headlines?';\nconst KEY = '47387a80918944f6baaa6e32fc95233d';\n\n\nclass App extends Component {\n    constructor(props) {\n        super(props);\n\n        let country, category, pageSize;\n        if (localStorage.options) {\n            ({country, category, pageSize} = this._loadUserOptions());\n        }\n\n        this.state = {\n            searchQuery: '',\n            totalResults: 0,\n            news: [],\n            country: country || 'us',\n            category: category || 'general',\n            pageSize: pageSize || 10,\n            page: 1,\n            isLoaded: false\n        };\n\n        this.touchStart = null;\n        this.SENSITIVITY = 55;\n    }\n\n    componentDidMount() {\n        this.fetchData();\n    }\n\n    _loadUserOptions() {\n        return JSON.parse(localStorage.getItem('options'))\n    }\n\n    _saveUserOptions(name, value) {\n        let savedOptions = {};\n        if (localStorage.options) {\n            savedOptions = this._loadUserOptions();\n        }\n        savedOptions[name] = value;\n        localStorage.setItem('options', JSON.stringify(savedOptions));\n    }\n\n    _calculateURL = () => {\n        let url = new URL(`${BASE_PATH}${ALL_NEWS}`);\n        const {searchQuery, pageSize, page} = this.state;\n\n        if (!searchQuery) {\n            url = new URL(`${BASE_PATH}${TOP_NEWS}`);\n            const {country, category} = this.state;\n\n            url.searchParams.set('country', country);\n            url.searchParams.set('category', category);\n        }\n\n        url.searchParams.set('q', searchQuery);\n        url.searchParams.set('pageSize', pageSize);\n        url.searchParams.set('page', page);\n\n        return url;\n    };\n\n    fetchData = () => {\n        this.setState({\n            isLoaded: false\n        }, async () => {\n            try {\n                let url = this._calculateURL();\n\n                let res = await fetch(url, {\n                    headers: {\n                        Authorization: KEY\n                    }\n                });\n\n                if (!res.ok) alert(\"HTTP-Error: \" + res.status);\n\n                let resJson = await res.json();\n\n                if (resJson.status === 'ok') {\n                    this.setState({\n                        totalResults: resJson.totalResults,\n                        news: resJson.articles,\n                        isLoaded: true\n                    });\n                } else {\n                    alert(resJson.message);\n                }\n            } catch (err) {\n                alert(err);\n            }\n        });\n    };\n\n    handleInputChange = ({target: {value}}) => {\n        this.setState({\n            searchQuery: value,\n            page: 1\n        });\n    };\n\n    handleSelectChange = ({target}) => {\n        const name = target.name;\n        let {value} = target;\n\n        let searchQuery = '';\n        if (name === 'pageSize') {\n            searchQuery = this.state.searchQuery;\n            value = +value;\n        }\n\n        this._saveUserOptions(name, value);\n\n        this.setState({\n            [name]: value,\n            page: 1,\n            searchQuery: searchQuery\n        }, this.fetchData);\n    };\n\n    handleSearchBtnClick = (e) => {\n        e.preventDefault();\n        const {searchQuery} = this.state;\n        if (searchQuery === '') return;\n\n        this.setState({\n            page: 1\n        }, this.fetchData);\n    };\n\n\n    handlePageChange = (e) => {\n        e.preventDefault();\n        const name = e.target.name;\n        const {page} = this.state;\n\n        if (!isNaN(name)) {\n            if (page === +name) return;\n            this.updatePage(+name);\n        } else {\n            switch (name) {\n                case 'prev':\n                    this.updatePage(page - 1);\n                    break;\n                case 'next':\n                    this.updatePage(page + 1);\n                    break;\n                default:\n                    return null;\n            }\n        }\n    };\n\n    updatePage = (number) => {\n        this.setState({\n            page: number\n        }, this.fetchData);\n    };\n\n    onTouchStart = (e) => {\n        this.touchStart = e.changedTouches[0].clientX;\n    };\n\n    onTouchEnd = (e) => {\n        const touchEnd = e.changedTouches[0].clientX;\n        let dif = touchEnd - this.touchStart;\n\n        const {page, totalResults, pageSize} = this.state;\n        const lastPage = calculateLastPage(totalResults, pageSize);\n\n        if (dif < -this.SENSITIVITY && lastPage !== page) {\n            this.updatePage(page + 1);\n        } else if (dif > this.SENSITIVITY && page !== 1) {\n            this.updatePage(page - 1);\n        }\n    };\n\n    render() {\n        const {searchQuery, totalResults, news, country, category, pageSize, page, isLoaded} = this.state;\n\n        let changingContent;\n        if (!isLoaded) {\n            changingContent = <Preloader/>;\n        } else {\n            changingContent =\n                <>\n                <NewsList className=\"col-12\"\n                          news={news}/>\n\n                <PaginationForm className=\"col-12\"\n                                handleSelectChange={this.handleSelectChange}\n                                selectedPageSize={pageSize}\n                                handlePageChange={this.handlePageChange}\n                                page={page}\n                                lastPage={calculateLastPage(totalResults, pageSize)}\n                                totalResults={totalResults}\n                />\n\n                <Footer className=\"col-12\"/>\n                </>;\n        }\n\n        return (\n            <ErrorBoundary>\n                <div className=\"container app\"\n                     onTouchStart={this.onTouchStart}\n                     onTouchEnd={this.onTouchEnd}>\n\n                    <Header title=\"News\"\n                            selectedPageSize={pageSize}\n                            handleSelectChange={this.handleSelectChange}/>\n\n                    <PaginationForm className=\"col-12\"\n                                    handleSelectChange={this.handleSelectChange}\n                                    selectedPageSize={pageSize}\n                                    handlePageChange={this.handlePageChange}\n                                    page={page}\n                                    lastPage={calculateLastPage(totalResults, pageSize)}\n                                    totalResults={totalResults}/>\n\n                    <Form selectedCountry={country}\n                          selectedCategory={category}\n                          handleSelectChange={this.handleSelectChange}\n\n                          value={searchQuery}\n                          handleInputChange={this.handleInputChange}\n                          handleSearchBtnClick={this.handleSearchBtnClick}/>\n\n                    {changingContent}\n                </div>\n            </ErrorBoundary>\n        )\n    }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\nserviceWorker.unregister();\n"],"sourceRoot":""}