{"version":3,"sources":["components/TableHead.js","components/TableRow.js","components/Preloader.js","App.js","randomNum.js","index.js"],"names":["TableHead","react_default","a","createElement","className","TableRow","_ref","_ref$car","car","Name","Miles_per_Gallon","Cylinders","Displacement","Horsepower","Weight_in_lbs","Acceleration","Year","Origin","defaultProps","Preloader","src","alt","BASE_PATH","App","state","data","page","isLoaded","fetchData","_callee2","regenerator_default","wrap","_context2","prev","next","_this","setState","Object","asyncToGenerator","mark","_callee","url","res","newData","_context","calculateUrl","fetch","sent","ok","alert","status","json","concat","toConsumableArray","t0","finish","stop","addData","document","documentElement","getBoundingClientRect","bottom","clientHeight","this","addEventListener","removeEventListener","path","_this$state","rows","map","obj","components_TableRow","key","maxNum","Math","random","components_TableHead","components_Preloader","Component","ReactDOM","render","src_App","getElementById"],"mappings":"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","file":"static/js/main.5a778032.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst TableHead = () => (\r\n\t<thead>\r\n\t\t<tr className=\"table__row table__row--head\">\r\n\t\t\t<th className=\"table__cell table__cell--head\">Название</th>\r\n\t\t\t<th className=\"table__cell table__cell--head\">Расход топлива мл/г</th>\r\n\t\t\t<th className=\"table__cell table__cell--head\">Цилиндры</th>\r\n\t\t\t<th className=\"table__cell table__cell--head\">Рабочий объём</th>\r\n\t\t\t<th className=\"table__cell table__cell--head\">Л.C</th>\r\n\t\t\t<th className=\"table__cell table__cell--head\">Вес</th>\r\n\t\t\t<th className=\"table__cell table__cell--head\">Ускорение м/c2</th>\r\n\t\t\t<th className=\"table__cell table__cell--head\">Год выпуска</th>\r\n\t\t\t<th className=\"table__cell table__cell--head\">Производство</th>\r\n\t\t</tr>\r\n\t</thead>\r\n);\r\n\r\nexport default TableHead;","import React from \"react\";\r\nimport PropTypes from 'prop-types';\r\n\r\nconst TableRow = ({ car: {Name, Miles_per_Gallon,\r\n\t\t                  Cylinders, Displacement,\r\n\t\t                  Horsepower, Weight_in_lbs,\r\n\t\t                  Acceleration, Year, Origin}\r\n                  }) => (\r\n\t<tr className=\"table__row\">\r\n\t\t<td className=\"table__cell\">{Name}</td>\r\n\t\t<td className=\"table__cell\">{Miles_per_Gallon}</td>\r\n\t\t<td className=\"table__cell\">{Cylinders}</td>\r\n\t\t<td className=\"table__cell\">{Displacement}</td>\r\n\t\t<td className=\"table__cell\">{Horsepower}</td>\r\n\t\t<td className=\"table__cell\">{Weight_in_lbs}</td>\r\n\t\t<td className=\"table__cell\">{Acceleration}</td>\r\n\t\t<td className=\"table__cell\">{Year}</td>\r\n\t\t<td className=\"table__cell\">{Origin}</td>\r\n\t</tr>\r\n);\r\n\r\nTableRow.propTypes = {\r\n\tName: PropTypes.string,\r\n\tMiles_per_Gallon: PropTypes.number,\r\n\tCylinders: PropTypes.number,\r\n\tDisplacement: PropTypes.number,\r\n\tHorsepower: PropTypes.number,\r\n\tWeight_in_lbs: PropTypes.number,\r\n\tAcceleration: PropTypes.number,\r\n\tYear: PropTypes.number,\r\n\tOrigin: PropTypes.string,\r\n};\r\n\r\nTableRow.defaultProps = {\r\n\tName: '',\r\n\tMiles_per_Gallon: null,\r\n\tCylinders: null,\r\n\tDisplacement: null,\r\n\tHorsepower: null,\r\n\tWeight_in_lbs: null,\r\n\tAcceleration: null,\r\n\tYear: null,\r\n\tOrigin: '',\r\n};\r\n\r\nexport default TableRow;\r\n","import React from \"react\";\r\n\r\nconst Preloader = () => (\r\n\t<div className=\"preloader\">\r\n\t\t<img src='./preloader.gif'\r\n\t\t     className='preloader__img'\r\n\t\t     alt='Loading...'/>\r\n\t</div>\r\n);\r\n\r\nexport default Preloader;\r\n","import React, { Component } from 'react';\n\nimport TableHead from './components/TableHead';\nimport TableRow from './components/TableRow';\nimport Preloader from './components/Preloader';\n\nimport randomNum from './randomNum';\n\n\nconst BASE_PATH = `https://nikita2090.github.io/cb-test/data/`;\n\n\nclass App extends Component {\n\tstate = {\n\t\tdata: [],\n\t\tpage: 1,\n\t\tisLoaded: false\n\t};\n\n\tcomponentDidMount() {\n\t\tconst {page} = this.state;\n\t\tthis.fetchData(page);\n\n\t\tdocument.addEventListener('scroll', this.addData);\n\t}\n\n\n\tcomponentWillUnmount() {\n\t\tdocument.removeEventListener('scroll', this.addData);\n\t}\n\n\n\tfetchData = async (page) => {\n\t\tthis.setState({\n\t\t\tisLoaded: false\n\t\t},async () => {\n\t\t\ttry {\n\t\t\t\tconst url = this.calculateUrl(BASE_PATH, page);\n\t\t\t\tlet res = await fetch(url);\n\n\t\t\t\tif (!res.ok) alert(\"HTTP-Error: \" + res.status);\n\n\t\t\t\tlet newData = await res.json();\n\t\t\t\tconst { data } = this.state;\n\n\t\t\t\tthis.setState({\n\t\t\t\t\tdata: [...data, ...newData],\n\t\t\t\t});\n\t\t\t} catch (err) {\n\t\t\t\talert(err);\n\t\t\t} finally {\n\t\t\t\tthis.setState({\n\t\t\t\t\tisLoaded: true\n\t\t\t\t});\n\t\t\t}\n\t\t});\n\t};\n\n\taddData = () => {\n\t\tconst { page } = this.state;\n\t\tif (page >= 5) return;\n\n\t\tlet windowRelativeBottom = document.documentElement.getBoundingClientRect().bottom;\n\t\tif (windowRelativeBottom - 100 > document.documentElement.clientHeight) return;\n\n\t\tthis.fetchData(page + 1);\n\n\t\tthis.setState({\n\t\t\tpage: page + 1\n\t\t});\n\t};\n\n\tcalculateUrl(path, page){\n\t\tconst file = `cars-${page}.json`;\n\t\treturn path + file;\n\t}\n\n\trender() {\n\t\tconst { data, isLoaded } = this.state;\n\t\tconst rows = data.map(obj => (\n\t\t\t\t<TableRow car={obj}\n\t\t\t\t          key={obj.Weight_in_lbs + randomNum(1000)}/>\n\t\t));\n\n\t\treturn (\n\t\t\t<div>\n\t\t\t\t<table className=\"table\">\n\t\t\t\t\t<TableHead/>\n\t\t\t\t\t<tbody>\n\t\t\t\t\t\t{rows}\n\t\t\t\t\t</tbody>\n\t\t\t\t</table>\n\t\t\t\t{!isLoaded && <Preloader/>}\n\t\t\t</div>\n\t\t)\n\t}\n}\n\nexport default App;\n","//returns random number from 0 to maxNum\r\n\r\nexport default function randomNum(maxNum) {\r\n\treturn 0.5 + Math.random() * (maxNum + 1);\r\n}\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport './style.css';\n\nimport App from './App';\n\nReactDOM.render(<App/>, document.getElementById('root'));\n\n"],"sourceRoot":""}